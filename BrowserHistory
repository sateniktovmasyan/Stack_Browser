# Browser history that will contain functions open, back, forward


class BrowserHistory:
    def __init__(self):
        self.__back = MyStack()
        self.__forward = MyStack()
        self.__current = ""

    def back(self):
        if self.__back.is_empty():
            # in case nothing is open
            print 'no history to show'
        else:
            print 'back link is'
            self.__forward.push(self.__current)
            self.__current = self.__back.pop()

    def forward(self):
        if self.__forward.is_empty():
            # in case no where to go forward
            print 'no history to show'
        else:
            self.__back.push(self.__current)
            print 'forward link is'
            self.__current = self.__forward.pop()

    def getcurrent(self):
        print self.__current
        
    def open(self, link):
        if self.__current != "":
            self.__back.push(self.__current)
            self.__forward = MyStack()

        self.__current = link


# using of a stack
class MyStack:
    def __init__(self):
        self.items = []

    def is_empty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        return self.items[len(self.items) - 1]

    def size(self):
        return len(self.items)


def main():

    bh = BrowserHistory()
    bh.open("gg.com")
    bh.open("ggfinance.com")
    bh.open("whateverwithgg.com")
    bh.getcurrent()
    bh.back()
    bh.getcurrent()
    bh.forward()
    bh.getcurrent()


main()
